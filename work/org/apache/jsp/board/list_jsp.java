/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.27
 * Generated at: 2019-12-18 05:25:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import board.UtilMgr;
import board.BoardBean;
import java.util.Vector;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("board.BoardBean");
    _jspx_imports_classes.add("java.util.Vector");
    _jspx_imports_classes.add("board.UtilMgr");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- list.jsp -->\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      board.BoardMgr mgr = null;
      mgr = (board.BoardMgr) _jspx_page_context.getAttribute("mgr", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (mgr == null){
        mgr = new board.BoardMgr();
        _jspx_page_context.setAttribute("mgr", mgr, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\n');
      board.BCommentMgr cmgr = null;
      cmgr = (board.BCommentMgr) _jspx_page_context.getAttribute("cmgr", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (cmgr == null){
        cmgr = new board.BCommentMgr();
        _jspx_page_context.setAttribute("cmgr", cmgr, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\n');

		request.setCharacterEncoding("EUC-KR");
		int totalRecord = 0;//총게시물 개수
		int numPerPage = 10;//페이지당 레코드 개수 (5,10,15,30)
		int pagePerBlock = 15;//블럭당 페이지 개수
		int totalPage = 0;//총 페이지 개수
		int totalBlock = 0;//총 블럭 개수
		int nowPage = 1;//현재 페이지
		int nowBlock = 1;//현재 블럭
		
		//page에 보여줄 게시물 개수값
		if(request.getParameter("numPerPage")!=null&&
			!request.getParameter("numPerPage").equals("null")){
			numPerPage = UtilMgr.parseInt(request, "numPerPage");
		}		
		int start = 0;//테이블에 시작 번호
		int cnt = numPerPage;
		
		//검색에 필요한 변수
		String keyField = "" , keyWord = "";
		
		//검색일때 
		if(request.getParameter("keyWord")!=null){
			keyField = request.getParameter("keyField");
			keyWord = request.getParameter("keyWord");
		}
		
		//검색 후에 다시 처음화면으로 요청
		if(request.getParameter("reload")!=null&&
				request.getParameter("reload").equals("true")){
			keyField = "";  keyWord = "";
		}
		
		totalRecord = mgr.getTotalCount(keyField, keyWord);
		//out.print(totalRecord);
		
		//nowPage를 요청한 경우
		if(request.getParameter("nowPage")!=null){
			nowPage = UtilMgr.parseInt(request, "nowPage");
		}
		//테이블 시작 번호
		start = (nowPage*numPerPage)-numPerPage;
		
		//전체페이지수 (전체레코드개수/페이지당 레코드 개수) 올림.
		 totalPage = (int)Math.ceil((double)totalRecord/numPerPage);
		//전체블럭수 (전체페이지수/블럭당 페이지 개수) 올림.
		 totalBlock = (int)Math.ceil((double)totalPage/pagePerBlock);
		//현재블럭 (현재페이지수/블럭당 페이지 개수) 올림.
		 nowBlock = (int)Math.ceil((double)nowPage/pagePerBlock);
 
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("\t<title>JSP Board</title>\n");
      out.write("<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\tfunction check() {\n");
      out.write("\t\tif(document.searchFrm.keyWord.value==\"\"){\n");
      out.write("\t\t\talert(\"검색어를 입력하세요.\");\n");
      out.write("\t\t\tdocument.searchFrm.keyWord.focus();\n");
      out.write("\t\t\treturn;\n");
      out.write("\t\t}\n");
      out.write("\t\tdocument.searchFrm.submit();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction list() {\n");
      out.write("\t\tdocument.listFrm.action = \"list.jsp\";\n");
      out.write("\t\tdocument.listFrm.submit();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction numPerFn(numPerPage) {\n");
      out.write("\t\tdocument.readFrm.numPerPage.value=numPerPage;\n");
      out.write("\t\tdocument.readFrm.submit();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction read(num) {\n");
      out.write("\t\tdocument.readFrm.num.value = num;\n");
      out.write("\t\tdocument.readFrm.action = \"read.jsp\";\n");
      out.write("\t\tdocument.readFrm.submit();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction block(block) {\n");
      out.write("\t\tdocument.readFrm.nowPage.value = \n");
      out.write("\t\t\t");
      out.print(pagePerBlock);
      out.write("*(block-1)+1;\n");
      out.write("\t\tdocument.readFrm.submit();\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction pageing(page) {\n");
      out.write("\t\tdocument.readFrm.nowPage.value = page;\n");
      out.write("\t\tdocument.readFrm.submit();\t\n");
      out.write("\t}\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body bgcolor=\"#FFFFCC\" >\n");
      out.write("<div align=\"center\"><br/>\n");
      out.write("<h2>JSP Board</h2><br/>\n");
      out.write("<table>\n");
      out.write("\t<tr>\n");
      out.write("\t\t<td width=\"600\">\n");
      out.write("\t\tTotal : ");
      out.print(totalRecord);
      out.write("Articles(\n");
      out.write("\t\t<font color=\"red\">");
      out.print(nowPage+"/"+totalPage);
      out.write("Pages</font>\n");
      out.write("\t\t)\n");
      out.write("\t\t</td>\n");
      out.write("\t\t<td align=\"right\">\n");
      out.write("\t\t\t<form name=\"npFrm\" method=\"post\"> <!-- post방식의 npFrm의 이름을 가지고 있는 form -->\n");
      out.write("\t\t\t\t\t<select name=\"numPerPage\" size=\"1\" onchange=\"numPerFn(this.form.numPerPage.value)\">\n");
      out.write("\t\t\t\t\t<!-- select name에 따라서 onchange 될것이다. \n");
      out.write("\t\t\t\t\tthis.form.numPerPage.value값을 numPerFn로 들고가라 -->\n");
      out.write("    \t\t\t\t\t<option value=\"5\">5개 보기</option>\n");
      out.write("    \t\t\t\t\t<option value=\"10\" selected>10개 보기</option>\n");
      out.write("    \t\t\t\t\t<option value=\"15\">15개 보기</option>\n");
      out.write("    \t\t\t\t\t<option value=\"30\">30개 보기</option>\n");
      out.write("   \t\t\t\t</select>\n");
      out.write("   \t\t\t</form>\n");
      out.write("   \t\t\t<script>document.npFrm.numPerPage.value=\"");
      out.print(numPerPage);
      out.write("\"</script>\n");
      out.write("\t\t</td>\n");
      out.write("\t</tr>\n");
      out.write("</table>\n");
      out.write("<table>\n");
      out.write("\t<tr>\n");
      out.write("\t\t<td align=\"center\" colspan=\"2\">\n");
      out.write("\t\t");

				Vector<BoardBean> vlist = mgr.getBoardList(keyField, keyWord, 
						start, cnt);
				int listSize = vlist.size();//브라우저 화면에 표시될 게시물 번호
				if(vlist.isEmpty()){
					out.println("등록된 게시물이 없습니다.");
				}else{
		
      out.write("\n");
      out.write("\t\t<table cellspacing=\"0\">\n");
      out.write("\t\t\t<tr align=\"center\" bgcolor=\"#D0D0D0\">\n");
      out.write("\t\t\t\t<td width=\"100\">번 호</td>\n");
      out.write("\t\t\t\t<td width=\"250\">제 목</td>\n");
      out.write("\t\t\t\t<td width=\"100\">이 름</td>\n");
      out.write("\t\t\t\t<td width=\"150\">날 짜</td>\n");
      out.write("\t\t\t\t<td width=\"100\">조회수</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t");

				for(int i=0;i<numPerPage;i++){
					if(i==listSize) break; //제일 마지막 페이지가 10가 아닌 경우
					BoardBean bean = vlist.get(i);
					int num = bean.getNum();
					String subject = bean.getSubject();
					String name = bean.getName();
					String regdate = bean.getRegdate();
					int depth = bean.getDepth();//답변의 깊이
					int count = bean.getCount();//조회수
					String filename = bean.getFilename();//첨부파일
					//댓글 count
					int bcount = cmgr.getBCommentCount(num);
		
      out.write("\n");
      out.write("\t\t<tr align=\"center\">\n");
      out.write("\t\t\t<td>");
      out.print(totalRecord-start-i);
      out.write("</td>\n");
      out.write("\t\t\t<td align=\"left\">\n");
      out.write("\t\t\t");

				for(int j=0;j<depth;j++){
					out.println("&nbsp;&nbsp;");
				}
			
      out.write("\n");
      out.write("\t\t\t<a href=\"javascript:read('");
      out.print(num);
      out.write("')\">");
      out.print(subject);
      out.write("</a>\n");
      out.write("\t\t\t");
if(filename!=null&&!filename.equals("")){
      out.write("\n");
      out.write("\t\t\t\t<img src=\"image/icon_file.gif\" align=\"middle\">\n");
      out.write("\t\t\t");
}
      out.write("\n");
      out.write("\t\t\t");
if(bcount>0){ 
      out.write("\n");
      out.write("\t\t\t\t<font color=\"red\">(");
      out.print(bcount);
      out.write(")</font>\n");
      out.write("\t\t\t");
} 
      out.write("\n");
      out.write("\t\t\t</td>\n");
      out.write("\t\t\t<td>");
      out.print(name);
      out.write("</td>\n");
      out.write("\t\t\t<td>");
      out.print(regdate);
      out.write("</td>\n");
      out.write("\t\t\t<td>");
      out.print(count);
      out.write("</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t");
}//---for
      out.write("\t\n");
      out.write("\t\t</table>\n");
      out.write("\t\t");
}//----if-else
      out.write("\t\n");
      out.write("\t\t</td>\n");
      out.write("\t</tr>\n");
      out.write("\t<tr>\n");
      out.write("\t\t<td colspan=\"2\"><br/><br/></td>\n");
      out.write("\t</tr>\n");
      out.write("\t<tr>\n");
      out.write("\t\t<td >\n");
      out.write("\t\t");
if(totalPage>0){ 
      out.write("\n");
      out.write("\t\t\t<!-- 이전 블럭 -->\n");
      out.write("\t\t\t");
if(nowBlock>1){
      out.write("\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t\t<a href=\"javascript:block('");
      out.print(nowBlock-1);
      out.write("')\">prev...</a>\n");
      out.write("\t\t\t");
}
      out.write("\n");
      out.write("\t\t\t<!-- 페이징 -->\n");
      out.write("\t\t\t");
 
					int pageStart = (nowBlock-1)*pagePerBlock+1;
					int pageEnd = (pageStart+pagePerBlock)<totalPage?
							pageStart+pagePerBlock:totalPage+1;
					for(;pageStart<pageEnd;pageStart++){
			
      out.write("\n");
      out.write("\t\t\t\t<a href=\"javascript:pageing('");
      out.print(pageStart);
      out.write("')\">\n");
      out.write("\t\t\t\t");
if(pageStart==nowPage){
      out.write("<font color=\"red\">");
}
      out.write("\n");
      out.write("\t\t\t\t\t[");
      out.print(pageStart);
      out.write("]\n");
      out.write("\t\t\t\t");
if(pageStart==nowPage){
      out.write("</font>");
}
      out.write("\n");
      out.write("\t\t\t\t</a>\n");
      out.write("\t\t\t");
}//---for
      out.write("\n");
      out.write("\t\t\t<!-- 다음 블럭 -->\n");
      out.write("\t\t\t");
if(totalBlock>nowBlock){
      out.write("\n");
      out.write("\t\t\t\t<a href=\"javascript:block('");
      out.print(nowBlock+1);
      out.write("')\">...next</a>\n");
      out.write("\t\t\t");
}
      out.write('\n');
      out.write('	');
      out.write('	');
}
      out.write("\n");
      out.write("\t\t</td>\n");
      out.write("\t\t<td align=\"right\">\n");
      out.write("\t\t\t<a href=\"post.jsp\">[글쓰기]</a>\n");
      out.write("\t\t\t<a href=\"javascript:list()\">[처음으로]</a>\n");
      out.write("\t\t\t<!-- function.list는 list.jsp로 이동하는 것, 새로고침 -->\n");
      out.write("\t\t</td>\n");
      out.write("\t</tr>\n");
      out.write("</table>\n");
      out.write("\n");
      out.write("<hr width=\"750\">\n");
      out.write("\n");
      out.write("<form name=\"listFrm\" method=\"post\">\n");
      out.write("\t<input type=\"hidden\" name=\"reload\" value=\"true\">\n");
      out.write("\t<input type=\"hidden\" name=\"nowPage\" value=\"1\">\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<form  name=\"searchFrm\">\n");
      out.write("\t<table  width=\"600\" cellpadding=\"4\" cellspacing=\"0\">\n");
      out.write(" \t\t<tr>\n");
      out.write("  \t\t\t<td align=\"center\" valign=\"bottom\">\n");
      out.write("   \t\t\t\t<select name=\"keyField\" size=\"1\" >\n");
      out.write("    \t\t\t\t<option value=\"name\"> 이 름</option>\n");
      out.write("    \t\t\t\t<option value=\"subject\"> 제 목</option>\n");
      out.write("    \t\t\t\t<option value=\"content\"> 내 용</option>\n");
      out.write("   \t\t\t\t</select>\n");
      out.write("   \t\t\t\t<input size=\"16\" name=\"keyWord\">\n");
      out.write("   \t\t\t\t<input type=\"button\"  value=\"찾기\" onClick=\"javascript:check()\">\n");
      out.write("   \t\t\t\t<input type=\"hidden\" name=\"nowPage\" value=\"1\">\n");
      out.write("  \t\t\t</td>\n");
      out.write(" \t\t</tr>\n");
      out.write("\t</table>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<form name=\"readFrm\">\n");
      out.write("\t<input type=\"hidden\" name=\"num\">\n");
      out.write("\t<input type=\"hidden\" name=\"nowPage\" value=\"");
      out.print(nowPage);
      out.write("\">\n");
      out.write("\t<input type=\"hidden\" name=\"keyField\" value=\"");
      out.print(keyField);
      out.write("\">\n");
      out.write("\t<input type=\"hidden\" name=\"keyWord\" value=\"");
      out.print(keyWord);
      out.write("\">\n");
      out.write("\t<input type=\"hidden\" name=\"numPerPage\" value=\"");
      out.print(numPerPage);
      out.write("\">\n");
      out.write("</form>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
