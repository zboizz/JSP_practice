/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.27
 * Generated at: 2019-11-25 09:26:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.poll;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class pollInsert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- pollInsert.jsp -->\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>JSP Poll</title>\r\n");
      out.write("<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tfunction send() {\r\n");
      out.write("\t\tf = document.frm;\r\n");
      out.write("\t\tf.sdate.value = f.sdateY.value+\"-\"\r\n");
      out.write("\t\t+ f.sdateM.value+\"-\"+f.sdateD.value;\r\n");
      out.write("\t\tf.edate.value = f.edateY.value+\"-\"\r\n");
      out.write("\t\t+ f.edateM.value+\"-\"+f.edateD.value;\r\n");
      out.write("\t\tf.submit();\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body bgcolor=\"#D5D5D5\">\r\n");
      out.write("\t<div align=\"center\">\r\n");
      out.write("\t\t<br />\r\n");
      out.write("\t\t<h2>VOTE PROGRAM</h2>\r\n");
      out.write("\t\t<!--  <hr width=\"600\" />-->\r\n");
      out.write("\t\t<h3>설문지를 작성하는 페이지입니다.<br/> \r\n");
      out.write("\t\t<span style=\"color: #005766;\">\"원하시는 질문\"</span>과 \r\n");
      out.write("\t\t<span style=\"color: #99004C;\">\"항목\"</span> <br/>\r\n");
      out.write("\t\t그리고 \"시간\"을 선택해주세요</h3>\r\n");
      out.write("\t\t<hr width=\"600\" />\r\n");
      out.write("\t\t<form name=\"frm\" method=\"post\" action=\"pollInsertProc.jsp\">\r\n");
      out.write("\t\t<!-- 투표처리기능 pollInsertProc.jsp-->\r\n");
      out.write("\t\t\t<table border=\"1\" width=\"500\" hight=\"400\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td style= \"background-color:#005766; color: #FFFFFF; \r\n");
      out.write("\t\t\t\t\tfont-size:18; text-align: center;\"><b>질문</b></td>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"2\"><input name=\"question\" size=\"54\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td style= \"background-color: #99004C; color: #FFFFFF;\r\n");
      out.write("\t\t\t\t\tfont-size:18; text-align: center; \"rowspan=\"30\" >\r\n");
      out.write("\t\t\t\t\t<b>항목</b></td>\r\n");
      out.write("\t\t\t\t\t");

						for (int i = 1; i <= 4; i++) {
							out.println("<td>" + (i * 2 - 1)
									+ ": <input name='item'></td>");
							out.println("<td>" + (i * 2)
									+ ": <input name='item'></td>");
							out.println("</tr>");
							if (i == 9) {
								out.println("");
							} else {
								out.println("<tr>");
							}
						}//for end
					
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td style=\"text-align: center;\">투표 시작일</td>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"2\"><select name=\"sdateY\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"2019\">2019\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"2020\">2020\r\n");
      out.write("\t\t\t\t\t</select>년 <select name=\"sdateM\">\r\n");
      out.write("\t\t\t\t\t\t\t");

								for (int i = 1; i <= 12; i++) {
									out.println("<option value='" + i + "'>" + i);
								}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t</select>월 <select name=\"sdateD\">\r\n");
      out.write("\t\t\t\t\t\t\t");

								for (int i = 1; i <= 31; i++) {
									out.println("<option value='" + i + "'>" + i);
								}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t</select>일</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td style=\"text-align: center;\">투표 마감일</td>\r\n");
      out.write("\t\t\t\t\t<td colspan=2><select name=\"edateY\">\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"2019\">2019\r\n");
      out.write("\t\t\t\t\t\t\t<option value=\"2020\">2020\r\n");
      out.write("\t\t\t\t\t</select>년 <select name=\"edateM\">\r\n");
      out.write("\t\t\t\t\t\t\t");

								for (int i = 1; i <= 12; i++) {
									out.println("<option value='" + i + "'>" + i);
								}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t</select>월 <select name=\"edateD\">\r\n");
      out.write("\t\t\t\t\t\t\t");

								for (int i = 1; i <= 31; i++) {
									out.println("<option value='" + i + "'>" + i);
								}
							
      out.write("\r\n");
      out.write("\t\t\t\t\t</select>일</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td style=\"text-align: center;\">복수투표</td>\r\n");
      out.write("\t\t\t\t\t<td colspan=2>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" name=\"type\" value=\"1\" checked>네 \r\n");
      out.write("\t\t\t\t\t\t<input type=\"radio\" name=\"type\" value=\"0\">아니요\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=3>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"button\" value=\"작성하기\" onclick=\"send()\"> \r\n");
      out.write("\t\t\t\t\t\t<input type=\"reset\" value=\"다시쓰기\"> \r\n");
      out.write("\t\t\t\t\t\t<input type=\"button\" value=\"리스트\" onClick=\"javascript:location.href='pollList.jsp'\">\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"sdate\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"edate\">\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
